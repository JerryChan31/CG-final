#version 330 core
layout (location = 0) in vec3 aPos;
layout (location = 1) in vec3 aNor;
layout(location = 2) in vec2 aTexCoord;
layout(location = 3) in vec2 aNorCoord;
out vec3 FragPos;
out vec3 Normal;
out vec2 TexCoord;
out vec2 NorCoord;
out vec4 posInLSpace;
uniform mat4 model;
uniform mat4 view;
uniform mat4 projection;
uniform mat4 lightSpaceMatrix;

void main()
{
   gl_Position = projection * view * model * vec4(aPos, 1.0f);
   TexCoord = aTexCoord;
   NorCoord = aNorCoord;
   FragPos = vec3(model * vec4(aPos, 1.0f));
   Normal = mat3(transpose(inverse(model)))*normalize(aNor);
   posInLSpace = lightSpaceMatrix * vec4(FragPos, 1.0);
};